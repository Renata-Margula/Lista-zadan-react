{"version":3,"sources":["Form/index.js","Tasks/index.js","Buttons/index.js","Section/index.js","Header/index.js","Container/index.js","App.js","reportWebVitals.js","index.js"],"names":["Form","addNewTask","useState","newTaskContent","setNewTaskContent","className","onSubmit","event","preventDefault","trim","value","autoFocus","placeholder","onChange","target","disabled","Tasks","tasks","hideDone","removeTask","toggleTaskDone","map","task","done","onClick","id","content","Buttons","toggleHideDone","setAllDone","length","every","Section","title","body","extraHeaderContent","Header","Container","props","children","App","setHideDone","setTasks","filter","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b57d4702.chunk.js","sourcesContent":["import React, { useState } from \"react\";\r\nimport \"./style.css\";\r\n\r\nconst Form = ({ addNewTask }) => {\r\n  const [newTaskContent, setNewTaskContent] = useState(\"\");\r\n  const onFormSubmit = (event) => {\r\n    event.preventDefault();\r\n    addNewTask(newTaskContent.trim());\r\n    setNewTaskContent(\"\");\r\n  };\r\n\r\n  return (\r\n    <form className=\"form\" onSubmit={onFormSubmit}>\r\n      <input\r\n        value={newTaskContent}\r\n        className=\"form__field\"\r\n        autoFocus placeholder=\"Co jest do zrobienia?\"\r\n        onChange={({ target }) => setNewTaskContent(target.value)}\r\n      />\r\n      <button className=\"form__button\" disabled={newTaskContent.trim() === \"\"}>Dodaj zadanie</button>\r\n    </form>\r\n  );\r\n};\r\nexport default Form;","import React from \"react\";\r\nimport \"./style.css\";\r\n\r\nconst Tasks = ({ tasks, hideDone, removeTask, toggleTaskDone }) => (\r\n    <ul className=\"list\">\r\n        {tasks.map(task => (\r\n            <li\r\n                key={task.id}\r\n                className={`list__tasks${task.done && hideDone ? \" list__item--hidden\" : \"\"}`}>\r\n                <button\r\n                    className=\"list__button list__button--done\"\r\n                    onClick={() => toggleTaskDone(task.id)}\r\n                >\r\n                    {task.done ? \"âœ“\" : \"\"}\r\n                </button>\r\n                <span className={`list__item${task.done ? \" list__item--done\" : \"\"}`}>\r\n                    {task.id} - {task.content}\r\n                </span>\r\n                <button className=\"list__button list__button--remove\"\r\n                    onClick={() => removeTask(task.id)}\r\n                >\r\n                    ðŸ—‘\r\n                </button>\r\n            </li>\r\n        ))}\r\n    </ul >\r\n);\r\nexport default Tasks;","import React from \"react\";\r\nimport \"./style.css\";\r\n\r\nconst Buttons = ({ tasks, hideDone, toggleHideDone, setAllDone }) => (\r\n    tasks.length > 0 && (\r\n        <span className=\"section__button\">\r\n            <button onClick={toggleHideDone}\r\n                className=\"section__button section__button--header\">\r\n                {hideDone ? \"PokaÅ¼ ukoÅ„czone\" : \"Ukryj ukoÅ„czone\"}\r\n            </button>\r\n            <button onClick={setAllDone}\r\n                className=\"section__button section__button--header\"\r\n                disabled={tasks.every(({ done }) => done)}>\r\n                UkoÅ„cz wszystkie\r\n        </button>\r\n        </span>\r\n    )\r\n);\r\n\r\nexport default Buttons;","import React from \"react\";\r\nimport \"./style.css\";\r\n\r\nconst Section = ({ title, body, extraHeaderContent }) => (\r\n  <section className=\"section\">\r\n    <h2 className=\"section__header\">{title}\r\n      {extraHeaderContent}\r\n    </h2>\r\n    <div className=\"section__body\">\r\n      {body}\r\n    </div>\r\n  </section>\r\n);\r\n\r\nexport default Section;","import React from \"react\";\r\nimport \"./style.css\";\r\n\r\nconst Header = ({ title }) => (\r\n    <h1 className=\"header\">{title}</h1>\r\n);\r\n\r\nexport default Header;","import React from \"react\";\r\nimport \"./style.css\";\r\n\r\nconst Container = (props) => (\r\n    <main className=\"container\">\r\n        {props.children}\r\n    </main>\r\n);\r\n\r\nexport default Container;\r\n","import React, { useState } from 'react';\nimport Form from \"./Form\";\nimport Tasks from \"./Tasks\";\nimport Buttons from \"./Buttons\";\nimport Section from \"./Section\";\nimport Header from \"./Header\";\nimport Container from \"./Container\";\n\nfunction App() {\n  const [hideDone, setHideDone] = useState(false);\n  const [tasks, setTasks] = useState([\n    { id: 1, content: \"przejÅ›Ä‡ na Reacta\", done: false },\n    { id: 2, content: \"zjeÅ›Ä‡ obiad\", done: true },\n  ]);\n\n  const toggleHideDone = () => {\n    setHideDone(hideDone => !hideDone);\n  };\n\n  const removeTask = (id) => {\n    setTasks(tasks => tasks.filter(task => task.id !== id));\n  };\n\n  const toggleTaskDone = (id) => {\n    setTasks(tasks => tasks.map(task => {\n      if (task.id === id) {\n        return { ...task, done: !task.done };\n      }\n      return task;\n    }));\n  };\n\n  const setAllDone = () => {\n    setTasks(tasks => tasks.map(task => ({\n      ...task,\n      done: true,\n    })));\n  };\n\n  const addNewTask = (content) => {\n    setTasks(tasks => [\n      ...tasks,\n      {\n        content,\n        done: false,\n        id: tasks.length ? tasks[tasks.length - 1].id + 1 : 1,\n      },\n    ]);\n  };\n\n  return (\n    <Container>\n      <Header title=\"Lista zadaÅ„\" />\n      <Section\n        title=\"Dodaj nowe zadanie\"\n        body={<Form\n          addNewTask={addNewTask} />} />\n      <Section\n        title=\"Lista zadaÅ„\"\n        body={<Tasks tasks={tasks}\n          hideDone={hideDone}\n          removeTask={removeTask}\n          toggleTaskDone={toggleTaskDone} />}\n        extraHeaderContent={\n          <Buttons\n            tasks={tasks}\n            hideDone={hideDone}\n            toggleHideDone={toggleHideDone}\n            setAllDone={setAllDone} />}\n      />\n    </Container>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}