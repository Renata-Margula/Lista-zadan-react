{"version":3,"sources":["Form/styled.js","Form/index.js","Tasks/styled.js","Tasks/index.js","Buttons/styled.js","Buttons/index.js","Section/styled.js","Section/index.js","Header/styled.js","Header/index.js","Container/styled.js","Container/index.js","App.js","useTasks.js","reportWebVitals.js","index.js"],"names":["StyledForm","styled","form","Input","input","Button","button","Form","addNewTask","useState","newTaskContent","setNewTaskContent","inputRef","useRef","onSubmit","event","preventDefault","trim","ref","value","placeholder","onChange","target","onClick","current","focus","disabled","List","ul","Item","li","hidden","css","Content","span","done","remove","Tasks","tasks","hideDone","removeTask","toggleTaskDone","map","task","id","content","Span","Buttons","toggleHideDone","setAllDone","length","every","StyledSection","section","Header","header","Section","title","body","extraHeaderContent","StyledHeader","Main","main","Container","props","children","App","setHideDone","JSON","parse","localStorage","getItem","setTasks","useEffect","setItem","stringify","filter","useTasks","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.3e2fa7c9.chunk.js","sourcesContent":["import styled from \"styled-components\";\r\n\r\nexport const StyledForm = styled.form`\r\n    display: grid;\r\n    grid-gap: 20px;\r\n    grid-template-columns: 1fr auto;\r\n    padding: 5px 15px;\r\n\r\n@media(max-width:767px) {\r\n    grid-template-columns: 1fr;\r\n}\r\n`;\r\n\r\nexport const Input = styled.input`\r\n    border: 1px solid #eee;\r\n    height: 35px;\r\n    padding: 15px;\r\n    font-size: 15px;\r\n    margin-top: 5px;\r\n`;\r\n\r\nexport const Button = styled.button`\r\n    background-color: teal;\r\n    color: white;\r\n    border-style: none;\r\n    font-weight: lighter;\r\n    height: 35px;\r\n    text-align: center;\r\n    font-size: 15px;\r\n    margin-top: 5px;\r\n    cursor: pointer;\r\n    transition: 1.5s;\r\n        &:hover {\r\n            transform: scale(1.2);\r\n            background-color: hsl(180, 100%, 30%);\r\n    }\r\n`;","import React, { useState, useRef } from \"react\";\r\nimport { StyledForm, Input, Button } from \"./styled\";\r\n\r\nconst Form = ({ addNewTask }) => {\r\n  const [newTaskContent, setNewTaskContent] = useState(\"\");\r\n  const inputRef = useRef(null);\r\n  const focusInput = () => {\r\n    inputRef.current.focus();\r\n  }\r\n  const onFormSubmit = (event) => {\r\n    event.preventDefault();\r\n    addNewTask(newTaskContent.trim());\r\n    setNewTaskContent(\"\");\r\n  };\r\n\r\n  return (\r\n    <StyledForm onSubmit={onFormSubmit}>\r\n      <Input\r\n        ref={inputRef}\r\n        value={newTaskContent}\r\n        placeholder=\"Co jest do zrobienia?\"\r\n        onChange={({ target }) => setNewTaskContent(target.value)}\r\n      />\r\n      <Button\r\n        onClick={focusInput}\r\n        disabled={newTaskContent.trim() === \"\"}>\r\n        Dodaj zadanie\r\n      </Button>\r\n    </StyledForm>\r\n  );\r\n};\r\nexport default Form;","import styled, { css } from \"styled-components\";\r\n\r\nexport const List = styled.ul`\r\n    list-style-type: none;\r\n    padding: 10px;\r\n    min-height: 15px;\r\n`;\r\n\r\nexport const Item = styled.li`\r\n    word-break: break-all;\r\n    display: grid;\r\n    grid-template-columns: auto 1fr auto;\r\n    padding: 10px;\r\n    grid-gap: 20px;\r\n    border-bottom: 1px solid #eee;\r\n    align-items: center;\r\n\r\n    ${({ hidden }) => hidden && css`\r\n        display: none;\r\n    `}\r\n`;\r\n\r\nexport const Content = styled.span`\r\n    ${({ done }) => done && css`\r\n        text-decoration: line-through;\r\n    `}\r\n`;\r\n\r\nexport const Button = styled.button`\r\n    grid-column: 1;\r\n    background-color: green;\r\n    border: none;\r\n    color: white;\r\n    width: 33px;\r\n    height: 33px;\r\n    align-content: center;\r\n    align-items: center;\r\n    justify-content: center;\r\n    transition: background 1s;\r\n    cursor: pointer;\r\n        &:hover {\r\n            background-color: hsl(120, 100%, 30%);\r\n        }\r\n\r\n    ${({ remove }) => remove && css`\r\n        background-color: red;\r\n        color: white;\r\n        grid-column: 3;\r\n            &:hover {\r\n                background-color: hsl(0, 100%, 70%);\r\n        }\r\n    `}\r\n`;","import React from \"react\";\r\nimport { List, Item, Content, Button } from \"./styled\";\r\n\r\nconst Tasks = ({ tasks, hideDone, removeTask, toggleTaskDone }) => (\r\n    <List>\r\n        {tasks.map(task => (\r\n            <Item\r\n                key={task.id}\r\n                hidden={task.done && hideDone}\r\n            >\r\n                <Button\r\n                    onClick={() => toggleTaskDone(task.id)}\r\n                >\r\n                    {task.done ? \"âœ“\" : \"\"}\r\n                </Button>\r\n                <Content\r\n                    done={task.done}>\r\n                    {task.id} - {task.content}\r\n                </Content>\r\n                <Button remove\r\n                    onClick={() => removeTask(task.id)}\r\n                >\r\n                    ðŸ—‘\r\n                </Button>\r\n            </Item>\r\n        ))}\r\n    </List>\r\n);\r\nexport default Tasks;","import styled from \"styled-components\";\r\n\r\nexport const Span = styled.span`\r\n    display: flex;\r\n    float: right;\r\n    padding: 5px;\r\n    font-size: smaller;\r\n         \r\n@media (max-width: 767px) {\r\n        display: grid;\r\n        float: none;\r\n        flex-wrap: wrap;\r\n        margin-top: 5px;\r\n    }\r\n`;\r\n\r\nexport const Button = styled.button`\r\n    cursor: pointer;\r\n    border: none;\r\n    background: none;\r\n    color: teal;\r\n    transition: 1s;\r\n        &:hover {\r\n            color: hsl(180, 100%, 35%);\r\n        }\r\n        &:disabled {\r\n            color: gray;\r\n            cursor: not-allowed;\r\n        }\r\n`;","import React from \"react\";\r\nimport { Span, Button } from \"./styled\";\r\n\r\nconst Buttons = ({ tasks, hideDone, toggleHideDone, setAllDone }) => (\r\n    tasks.length > 0 && (\r\n        <Span>\r\n            <Button\r\n                onClick={toggleHideDone}\r\n            >\r\n                {hideDone ? \"PokaÅ¼ ukoÅ„czone\" : \"Ukryj ukoÅ„czone\"}\r\n            </Button>\r\n            <Button\r\n                onClick={setAllDone}\r\n                disabled={tasks.every(({ done }) => done)}>\r\n                UkoÅ„cz wszystkie\r\n            </Button>\r\n        </Span>\r\n    )\r\n);\r\n\r\nexport default Buttons;","import styled from \"styled-components\";\r\n\r\nexport const StyledSection = styled.section`\r\n    padding: 10px 0px 15px 0px;\r\n    margin: 10px 0;\r\n    margin-bottom: 15px;\r\n    background-color: white;\r\n`;\r\nexport const Header = styled.header`\r\n    font-size: 20px;\r\n    font-weight: 700;\r\n    margin: 10px 0;\r\n    border-bottom: 1px solid #eee;\r\n    padding-bottom: 15px;\r\n    padding-left: 10px;\r\n`;","import React from \"react\";\r\nimport { StyledSection, Header } from \"./styled\";\r\n\r\nconst Section = ({ title, body, extraHeaderContent }) => (\r\n  <StyledSection>\r\n    <Header>\r\n      {title}\r\n      {extraHeaderContent}\r\n    </Header>\r\n    <div>\r\n      {body}\r\n    </div>\r\n  </StyledSection>\r\n);\r\n\r\nexport default Section;","import styled from \"styled-components\";\r\n\r\nexport const StyledHeader = styled.header`\r\n    font-weight: 700;\r\n    font-size: 30px;\r\n    padding-left: 10px;\r\n`;","import React from \"react\";\r\nimport { StyledHeader } from \"./styled\";\r\n\r\nconst Header = ({ title }) => (\r\n    <StyledHeader>{title}</StyledHeader>\r\n);\r\n\r\nexport default Header;","import styled from \"styled-components\";\r\n\r\nexport const Main = styled.main`\r\n    font-family: 'Montserrat', sans-serif;\r\n    margin: 0 auto;\r\n    max-width: 800px;\r\n    background-color: #eee;\r\n`;","import React from \"react\";\r\nimport { Main } from \"./styled\";\r\n\r\nconst Container = (props) => (\r\n    <Main>\r\n        {props.children}\r\n    </Main>\r\n);\r\n\r\nexport default Container;\r\n","import React, { useState } from 'react';\nimport Form from \"./Form\";\nimport Tasks from \"./Tasks\";\nimport Buttons from \"./Buttons\";\nimport Section from \"./Section\";\nimport Header from \"./Header\";\nimport Container from \"./Container\";\nimport { useTasks } from \"./useTasks\";\n\nfunction App() {\n  const [hideDone, setHideDone] = useState(false);\n\n  const toggleHideDone = () => {\n    setHideDone(hideDone => !hideDone);\n  };\n\n  const {\n    tasks,\n    removeTask,\n    toggleTaskDone,\n    setAllDone,\n    addNewTask,\n  } = useTasks();\n\n  return (\n    <Container>\n      <Header title=\"Lista zadaÅ„\" />\n      <Section\n        title=\"Dodaj nowe zadanie\"\n        body={<Form\n          addNewTask={addNewTask} />} />\n      <Section\n        title=\"Lista zadaÅ„\"\n        body={<Tasks tasks={tasks}\n          hideDone={hideDone}\n          removeTask={removeTask}\n          toggleTaskDone={toggleTaskDone} />}\n        extraHeaderContent={\n          <Buttons\n            tasks={tasks}\n            hideDone={hideDone}\n            toggleHideDone={toggleHideDone}\n            setAllDone={setAllDone} />}\n      />\n    </Container>\n  );\n}\n\nexport default App;\n","import { useState, useEffect } from 'react';\r\n\r\nexport const useTasks = () => {\r\n    const [tasks, setTasks] = useState(JSON.parse(localStorage.getItem('tasks')) || []);\r\n\r\n    const removeTask = (id) => {\r\n        setTasks(tasks => tasks.filter(task => task.id !== id));\r\n    };\r\n\r\n    const toggleTaskDone = (id) => {\r\n        setTasks(tasks => tasks.map(task => {\r\n            if (task.id === id) {\r\n                return { ...task, done: !task.done };\r\n            }\r\n            return task;\r\n        }));\r\n    };\r\n\r\n    const setAllDone = () => {\r\n        setTasks(tasks => tasks.map(task => ({\r\n            ...task,\r\n            done: true,\r\n        })));\r\n    };\r\n\r\n    const addNewTask = (content) => {\r\n        setTasks(tasks => [\r\n            ...tasks,\r\n            {\r\n                content,\r\n                done: false,\r\n                id: tasks.length ? tasks[tasks.length - 1].id + 1 : 1,\r\n            },\r\n        ]);\r\n    };\r\n\r\n    useEffect(() => {\r\n        localStorage.setItem('tasks', JSON.stringify(tasks));\r\n    }, [tasks])\r\n\r\n    return {\r\n        tasks,\r\n        removeTask,\r\n        toggleTaskDone,\r\n        setAllDone,\r\n        addNewTask\r\n    }\r\n};","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}